{"version":3,"sources":["App.js","index.js"],"names":["RTCConfig","url","App","props","getPeerConnection","console","log","peerConnection","RTCPeerConnection","onaddstream","gotRemoteStream","onicecandidate","gotIceCandidate","oniceconnectionstatechange","onConnectionStatusChange","onsignalingstatechange","event","getMediaStream","callback","navigator","mediaDevices","getDisplayMedia","audio","video","then","stream","localStream","catch","error","joinSession","input","state","JSON","parse","trim","createAnswer","alert","createOffer","localVideo","current","srcObject","addStream","onConnection","handleError","initiateOffer","desc","sdp","setLocalDescription","signalData","handleJoin","completeHandshake","sigdata","setRemoteDescription","RTCSessionDescription","sendReply","addIceCandidates","stringify","candidate","push","setState","canArr","i","addIceCandidate","RTCIceCandidate","err","closeCall","close","pause","remoteVideo","showModal","hideModal","iceConnectionState","handleCall","React","createRef","this","className","onClick","value","placeholder","onChange","e","target","autoPlay","ref","width","height","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e959511a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nconst RTCConfig = {\r\n  \"iceServers\": [{\r\n    url: 'stun:stun.l.google.com:19302'\r\n  }]\r\n};\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n    };\r\n    this.signalData = { \"desc\": null, \"ice\": [] };\r\n    this.peerConnection = null;\r\n    this.localVideo = React.createRef(null);\r\n    this.remoteVideo = React.createRef(null);\r\n    this.localStream = null;\r\n  }\r\n\r\n  getPeerConnection = () => {\r\n    console.log('getPeerConnection')\r\n    this.peerConnection = new RTCPeerConnection(RTCConfig);\r\n    this.peerConnection.onaddstream = this.gotRemoteStream;\r\n    this.peerConnection.onicecandidate = this.gotIceCandidate;\r\n    this.peerConnection.oniceconnectionstatechange = this.onConnectionStatusChange;\r\n    this.peerConnection.onsignalingstatechange = (event) => { \r\n      console.log(\"Signaling change\", event); \r\n    }\r\n  }\r\n\r\n  getMediaStream = (callback) => {\r\n    console.log('getMediaStream')\r\n    navigator.mediaDevices.getDisplayMedia(\r\n      {\r\n        audio: true,\r\n        video: true\r\n      }).then((stream) => {\r\n        this.localStream = stream;\r\n        callback(stream);\r\n      }).catch(function (error) {\r\n        console.log(\"getUserMedia error: \", error);\r\n      });\r\n  }\r\n\r\n  joinSession = () => {\r\n    const {input} = this.state;\r\n    console.log('joinSession');\r\n    if (this.peerConnection == null) {\r\n      this.getPeerConnection();\r\n    }\r\n    // console.log(txtBox.val().trim())\r\n    var sigdata = JSON.parse(input.trim());\r\n    if (sigdata[\"desc\"] === \"\") {\r\n      alert(\"Please enter the offer\");\r\n      return;\r\n    }\r\n    // cpyRow.show();\r\n    this.getMediaStream(this.createAnswer);\r\n  }\r\n\r\n  createOffer = (stream) => {\r\n    console.log('create offer');\r\n    this.localVideo.current.srcObject = stream;\r\n    this.peerConnection.addStream(stream);\r\n    this.peerConnection.createOffer(this.onConnection, this.handleError);\r\n    // txtBox.popover('show');\r\n    // cpyRow.show();\r\n  }\r\n\r\n  initiateOffer = () => {\r\n    console.log('initiateOffer')\r\n    if (this.peerConnection == null) {\r\n      this.getPeerConnection();\r\n    }\r\n    this.getMediaStream(this.createOffer);\r\n  }\r\n\r\n  onConnection = (desc) => {\r\n    console.log(\"Description is \" + desc.sdp);\r\n    this.peerConnection.setLocalDescription(desc);\r\n    this.signalData[\"desc\"] = desc;\r\n    //Change the event on click of Join Button to Complete Handshake on Initiator Side\r\n    this.handleJoin = () => {\r\n      this.completeHandshake();\r\n    }\r\n  }\r\n\r\n  createAnswer = (stream) => {\r\n    const {input} = this.state;\r\n    console.log('create answer');\r\n    const sigdata = JSON.parse(input.trim());\r\n    this.localVideo.current.srcObject = stream;\r\n    this.peerConnection.addStream(stream);\r\n    this.peerConnection.setRemoteDescription(new RTCSessionDescription(sigdata[\"desc\"]), function () { console.log(\"Success\"); }, this.handleError);\r\n    this.peerConnection.createAnswer(this.sendReply, this.handleError);\r\n    this.addIceCandidates(sigdata[\"ice\"]);\r\n    // txtBox.popover(\"show\");\r\n  }\r\n\r\n  completeHandshake = () => {\r\n    const {input} = this.state;\r\n    console.log(\"Inside complete handshake\");\r\n    let sigdata = input.trim();\r\n    sigdata = JSON.parse(sigdata);\r\n    if (!sigdata[\"desc\"]) {\r\n      alert(\"Please enter the answer\");\r\n      return;\r\n    }\r\n    this.peerConnection.setRemoteDescription(new RTCSessionDescription(sigdata[\"desc\"]), function () { console.log(\"Success\"); }, this.handleError);\r\n    this.addIceCandidates(sigdata[\"ice\"]);\r\n\r\n  }\r\n\r\n  sendReply = (desc) => {\r\n    console.log('send reply');\r\n    this.peerConnection.setLocalDescription(desc);\r\n    this.signalData[\"desc\"] = desc;\r\n    console.log(JSON.stringify(this.signalData));\r\n    // this.cpyJumbRow.show();\r\n    // cpyJumBtn.popover('show');\r\n  }\r\n\r\n\r\n  gotIceCandidate = (event) => {\r\n    console.log('gotIceCandidate');\r\n    if (event.candidate) {\r\n      this.signalData[\"ice\"].push(event.candidate);\r\n      this.setState({input: JSON.stringify(this.signalData)})\r\n      // document.getElementById(\"desc\").value = JSON.stringify(signalData);\r\n    }\r\n  }\r\n\r\n  addIceCandidates = (canArr) => {\r\n    console.log('add ice candidates', canArr);\r\n    for (var i in canArr) {\r\n      this.peerConnection.addIceCandidate(new RTCIceCandidate(canArr[i]));\r\n    }\r\n  }\r\n\r\n  handleError = (err) => {\r\n    console.log(\"Error occured \" + err);\r\n  }\r\n\r\n\r\n  closeCall = () => {\r\n    console.log('close call');\r\n    this.peerConnection.close();\r\n    //peerConnection=null;\r\n\r\n    // txtBox.popover('hide');\r\n    // txtBox.val('');\r\n    this.localVideo.current.pause();\r\n    this.remoteVideo.current.pause();\r\n    this.localStream = null;\r\n    // $(localVideo).hide();\r\n    // showModal();\r\n  }\r\n\r\n  showModal = () => {\r\n    // $(\"#textModal\").modal('show');\r\n  }\r\n\r\n  hideModal = () => {\r\n    // $(\"#textModal\").modal('hide');\r\n  }\r\n\r\n  onConnectionStatusChange = (event) => {\r\n    switch (this.peerConnection.iceConnectionState) {\r\n      case 'checking':\r\n        console.log('Connecting to peer...');\r\n        break;\r\n      case 'connected': // on caller side\r\n        console.log('Connection established.');\r\n        // $('#textModal').modal('hide');\r\n        // $(\"#localVideo\").show();\r\n        // $(\"#hangupdiv\").show();\r\n        break;\r\n      case 'disconnected':\r\n        console.log('Disconnected.');\r\n        this.closeCall();\r\n        break;\r\n      case 'failed':\r\n        console.log('Failed.');\r\n        break;\r\n      case 'closed':\r\n        console.log('Connection closed.');\r\n        this.peerConnection = null;\r\n        this.handleJoin = () => {\r\n          this.joinSession();\r\n        }\r\n        break;\r\n      default:\r\n        console.log('sdfsfdsfsdfsdf')\r\n    }\r\n  }\r\n\r\n  gotRemoteStream = (event) => {\r\n    console.log(\"Received remote stream\");\r\n    this.remoteVideo.current.srcObject = event.stream;\r\n  }\r\n\r\n  handleCall = () => {\r\n    this.initiateOffer();\r\n  }\r\n\r\n  handleJoin = () => {\r\n    this.joinSession();\r\n  }\r\n\r\n  render() {\r\n    const {input} = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <button onClick={this.handleCall}>\r\n          call\r\n        </button>\r\n        <button onClick={this.handleJoin}>\r\n          join\r\n        </button>\r\n        <textarea\r\n          value={input} \r\n          placeholder='copy'\r\n          onChange={(e) => this.setState({input: e.target.value})}\r\n        />\r\n        <div>\r\n          <span>local</span>\r\n          <video\r\n            autoPlay\r\n            ref={this.localVideo}\r\n            width={100}\r\n            height={100}\r\n          />\r\n        </div>\r\n        <div>\r\n          <span>remote</span>\r\n          <video\r\n            autoPlay\r\n            ref={this.remoteVideo}\r\n            width={100}\r\n            height={100}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}